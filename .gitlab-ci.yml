variables:
   MAVEN_OPTS: -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository
   MAVEN_CLI_OPTS: "-s ${maven.home}/conf/settings.xml --batch-mode"
   # MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  
  

image: maven:latest
  
# maven:latest

stages:
    - build
    - deploy
    - sonarqube

cache:
  paths:
    - .m2/repository
    - target

# sonarqube-check:
#   stage: sonarqube  
#   variables:
#     SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
#     GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
#   cache:
#     key: "${CI_JOB_NAME}"
#     paths:
#       - .sonar/cache
#   script: 
#     - mvn verify sonar:sonar -Dsonar.projectKey=Sonar-maven
#   allow_failure: true
#   only:
#     - main

maven-build:
  stage: build
  script:
    - 'mvn compile'
    - 'mvn $MAVEN_OPTS package -Dmaven.test.skip=true'
    - echo "Packaging the code"
    # - 'mvn deploy'

  artifacts: 
   paths: 
      - target/*.war 


nexus-deploy:
  stage: deploy
  script:
      - mvn $MAVEN_CLI_OPTS deploy -Dmaven.test.skip=true 
      - echo "installing the package in local repository" 
   #  - 'mvn deploy -DskipTests -DaltDeploymentRepository=nexus::default::$NEXUS_URL'
    # - 'mvn $MAVEN_OPTS deploy -Dmaven.test.skip=true'



  # environment:
  #   name: nexus-deployment
  # variables:
  #   # MAVEN_SETTINGS_XML: "${CI_PROJECT_DIR}/settings.xml"
  #   NEXUS_USER: "$NEXUS_USER"
  #   NEXUS_PASS: "$NEXUS_PASS"
  # dependencies:
  #   - maven-build

# tomcat-deploy:
#   stage: deploy
#   script:
#     - 'curl --upload-file target/*.war "$TOMCAT_URL/manager/text/deploy?path=/app&update=true" -u $TOMCAT_USER:$TOMCAT_PASS'
#   dependencies:
#     - maven-build





